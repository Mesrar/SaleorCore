apiVersion: apps/v1
kind: Deployment
metadata:
  name: beat
  namespace: saleor
  labels:
    app: saleor
    component: scheduler
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: saleor
      component: scheduler
  template:
    metadata:
      labels:
        app: saleor
        component: scheduler
    spec:
      containers:
        - name: beat
          image: mesrarbrand/saleor:latest
          imagePullPolicy: Always
          # todo: need to give a password and a username for Redis.
          env:
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: django
                  key: DEBUG
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: django
                  key: ALLOWED_HOSTS
            - name: ALLOWED_CLIENT_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: django
                  key: ALLOWED_CLIENT_HOSTS
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: django
                  key: CELERY_BROKER_URL
            - name: DASHBOARD_URL
              valueFrom:
                configMapKeyRef:
                  name: django
                  key: DASHBOARD_URL
            - name: STOREFRONT_URL
              valueFrom:
                configMapKeyRef:
                  name: django
                  key: STOREFRONT_URL
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: SECRET_KEY
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_PASSWORD
          args: ["celery", "-A", "saleor", "beat"]
# todo: need to create that with NFS(?)
#          volumeMounts:
#            - name: media
#              mountPath: /saleor/media
#      volumes:
#        - name: media
#          persistentVolumeClaim:
#            claimName: beat
